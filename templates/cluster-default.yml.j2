version: '3.7'
services:
{% for node_ip, node in nodes.items() | sort(attribute='1.hostname') %}

    {{node.container}}:
        container_name: {{node.container}}
        image: {{node.image}}
{% if node.systemctl %}
{#      Using privileged: true messes with the host's GUI, so just adding SYS_ADMIN cap instead #}
        init: false
        entrypoint: "/sbin/init"
        cap_add:
            - SYS_ADMIN
{% else %}
{#      Here we allow docker's init as PID 0 which will call our bootstrap script #}
        init: true
        entrypoint: "/dcluster/bootstrap.sh"
{% endif %}
        hostname: {{node.hostname}}
        labels:
            bull.com.dcluster.role: {{node.role}}
        networks:
            {{network.name}}:
                ipv4_address: {{node.ip_address}}
        extra_hosts:
{% for node_ip, extra_host in nodes.items() | sort(attribute='1.hostname') %}
            {{extra_host.hostname}}: {{extra_host.ip_address}}
{% if extra_host.hostname_alias %}
            {{extra_host.hostname_alias}}: {{extra_host.ip_address}}
            {% endif -%}
{% endfor %}
            gateway: {{network.gateway_ip}}
        volumes:
            - {{bootstrap_dir}}:/dcluster
{% if node.systemctl %}
{# this mount is required for systemctl to work #}
            - /sys/fs/cgroup:/sys/fs/cgroup:ro
{% endif %}
{% if node.volumes %}
{% for node_volume in node.volumes %}
            - {{node_volume}}
{% endfor %}
{% endif %}
{{ node.static_text }}
{% endfor %}

networks:
  {{network.name}}:
    external:
        name: {{network.name}}

{% if volumes %}
volumes:
{% for volume_entry in volumes %}
    {{ volume_entry }}:
{% endfor %}
{% endif %}
