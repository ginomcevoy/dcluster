---

# https://www.middlewareinventory.com/blog/ssh-key-based-authentication-using-ansible-ad-hoc-and-playbook
# https://juriansluiman.nl/article/151/managing-ssh-known-hosts-with-ansible

- hosts: all
  gather_facts: false
  user: root
  tasks:
    - name: SSH keygen command
      shell: >
        ssh-keygen -q -b 2048 -t rsa -N "" -C "head" -f ~/.ssh/id_rsa
        creates="~/.ssh/id_rsa"
      when: "'head' in group_names"

    - name: Fetch the keyfile from the node to master
      tags: run
      fetch: 
        src: "~/.ssh/id_rsa.pub"
        dest: "buffer/head-id_rsa.pub"
        flat: yes
      when: "'head' in group_names"

    - name: Copy the key add to authorized_keys using Ansible module
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file','buffer/head-id_rsa.pub')}}"

    - name: Make sure the known hosts file exists
      file: 
        path: "{{ ssh_known_hosts_file }}"
        state: touch
        modification_time: preserve
        access_time: preserve

    - name: Check host name availability (IP addresses)
      shell: "ssh-keygen -f {{ ssh_known_hosts_file }} -F {{ hostvars[item].ip_address }}"
      with_items: "{{ groups['all'] }}"
      register: ssh_known_host_results
      ignore_errors: yes
      changed_when: false

    - name: Scan the public key (IP addresses)
      shell: "{{ ssh_known_hosts_command}} {{ hostvars[item.item].ip_address }} >> {{ ssh_known_hosts_file }}"
      with_items: "{{ ssh_known_host_results.results }}"
      when: item.stdout == ""

    - name: Check host name availability (hostnames)
      shell: "ssh-keygen -f {{ ssh_known_hosts_file }} -F {{ hostvars[item].hostname }}"
      with_items: "{{ groups['all'] }}"
      register: ssh_known_host_results
      ignore_errors: yes
      changed_when: false

    - name: Scan the public key (hostnames)
      shell: "{{ ssh_known_hosts_command}} {{ hostvars[item.item].hostname }} >> {{ ssh_known_hosts_file }}"
      with_items: "{{ ssh_known_host_results.results }}"
      when: item.stdout == ""

  vars:
    ssh_known_hosts_command: "ssh-keyscan -H -T 10"
    ssh_known_hosts_file: "/etc/ssh/ssh_known_hosts"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

# Add these lines to vars: to use the dcluster-provided inventory if needed
#    dansible:
#      inventory_basepath: ../../clusters
#      inventory_filename: inventory.yml
